name: "Build"
on:
  pull_request:
  push:
  schedule:
    - cron: '5 4 */2 * *'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nix-channel: ["nixos-unstable", "nixos-21.05", "nixos-21.11"]
    env:
      # See https://github.com/tuxedocomputers/tuxedo-control-center/issues/148
      NIXPKGS_ALLOW_INSECURE: "1"
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=channel:${{ matrix.nix-channel }}
    - uses: cachix/cachix-action@v10
      with:
        name: blitz
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pushFilter: '(-source$|nixpkgs\.tar\.gz$|nixexprs\.tar\.xz$)'
    - run: nix-shell --run "echo OK"
    - run: nix-build --arg nixpkgs "<nixpkgs>" ./nix/ci.nix -A tuxedo-control-center

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nix-channel: ["nixos-unstable", "nixos-21.05"]
    env:
      # See https://github.com/tuxedocomputers/tuxedo-control-center/issues/148
      NIXPKGS_ALLOW_INSECURE: "1"
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=channel:${{ matrix.nix-channel }}
    - uses: cachix/cachix-action@v10
      with:
        name: blitz
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
    - run: nix-shell --run "echo OK"
    - run: nix-build --arg nixpkgs "<nixpkgs>" ./nix/ci.nix -A test.driver
